import io.gitlab.arturbosch.detekt.Detekt

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'

    // Code Style
    id "io.gitlab.arturbosch.detekt" version "$detekt"
}

allprojects {
    apply plugin: "io.gitlab.arturbosch.detekt" // Version should be inherited from parent

    detekt {
        config = files("$rootDir/detekt_config.yml")
        // point to your custom config defining rules to run, overwriting default behavior
    }
}

android {
    namespace 'com.mecofarid.trending'
    compileSdk rootProject.compileSdk

    defaultConfig {
        applicationId "com.mecofarid.trending"
        minSdk rootProject.minSdk
        targetSdk rootProject.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    buildFeatures {
        dataBinding = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

tasks.withType(Detekt).configureEach {
    reports {
        html.enabled = false // observe findings in your browser with structure and code snippets
        xml.enabled = false // checkstyle like format mainly for integrations like Jenkins
        txt.enabled = false // similar to the console output, contains issue signature to manually edit baseline files
        sarif.enabled = false // standardized SARIF format (https://sarifweb.azurewebsites.net/) to support integrations with Github Code Scanning
    }
}

dependencies {

    implementation project(':shared')

    // Android UI
    implementation "androidx.appcompat:appcompat:$appCompat"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout"
    implementation "androidx.recyclerview:recyclerview:$recyclerView"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefresh"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewModelScope"
    implementation "androidx.fragment:fragment-ktx:$viewModelFragmentKtx"

    implementation "com.airbnb.android:lottie:$lottieAndroidView"
    implementation "com.facebook.shimmer:shimmer:$shimmerAndroidView"
    implementation "com.github.bumptech.glide:glide:$glide"
}