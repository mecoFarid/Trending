plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'

    id 'com.google.dagger.hilt.android'
    id "com.apollographql.apollo3" version "$apolloGraphQl"
}

android {
    namespace 'com.mecofarid.shared'
    compileSdk rootProject.compileSdk

    defaultConfig {
        minSdk rootProject.minSdk
        targetSdk rootProject.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugarJdkLibrary"

    // Android UI
    api "com.google.android.material:material:$materialUi"

    // Kotlin
    implementation "androidx.core:core-ktx:$kotlin"

    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewModelScope"

    // DI
    implementation "com.google.dagger:hilt-android:$dagerHilt"
    kapt "com.google.dagger:hilt-compiler:$dagerHilt"

    // Room
    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-ktx:$room"
    annotationProcessor "androidx.room:room-compiler:$room"
    kapt "androidx.room:room-compiler:$room"

    // OkHttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpLogging"

    // Apollo GraphQL
    implementation "com.apollographql.apollo3:apollo-runtime:$apolloGraphQl"

    // Test
    testImplementation(project(":shared-mock"))
    testImplementation "junit:junit:$jUnit"
    testImplementation "io.mockk:mockk:$mockk"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutines"
    testImplementation "androidx.test:core-ktx:$kotlinAndroidTest"
    testImplementation "androidx.test.ext:junit:$jUnitAndroidX"
    testImplementation "androidx.arch.core:core-testing:$androidArchCore"

    androidTestImplementation project(':shared-mock')
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutines"
    androidTestImplementation "androidx.test.ext:junit:$jUnitAndroidX"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
}

kapt {
    correctErrorTypes true
}

apollo {
    service("service") {
        packageName.set("com.mecofarid.shared")
        mapScalarToKotlinLong("Long")
    }
}
